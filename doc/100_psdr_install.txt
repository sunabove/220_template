- sudo apt-get remove <package> && sudo apt-get autoremove

- # install java
- sudo apt install openjdk-11-jdk
- sudo apt install git
- sudo apt install mariadb-server mariadb-client
- mysql -h localhost -u root 
- Maria Db > create database psdr ;
- Maria Db > show databases ;
- Maria Db >GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'admin' WITH GRANT OPTION;
- Maria Db >GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.1.%' IDENTIFIED BY 'admin' WITH GRANT OPTION;
- Maria Db >GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.0.%' IDENTIFIED BY 'admin' WITH GRANT OPTION;

- apt install firewalld
- firewall-cmd --add-port=3306/tcp 
- firewall-cmd --permanent --add-port=3306/tcp
- firewall-cmd --add-port=80/tcp 
- firewall-cmd --permanent --add-port=80/tcp

- groupadd tomcat
- useradd -g tomcat -d /opt/tomcat tomcat 
- cd /opt/

- wget http://www-eu.apache.org/dist/tomcat/tomcat-9/v9.0.10/bin/apache-tomcat-9.0.10.tar.gz
- tar -xzvf apache-tomcat-9.0.10.tar.gz
- mv apache-tomcat-9.0.10/ tomcat/
- chown -R tomcat:tomcat /opt/tomcat
- chmod +x /opt/tomcat/svr/bin/*

- <tomcat>/webapps/manager/META-INF/context.xml
- <Context antiResourceLocking="false" privileged="true" >
    <!--
    <Valve className="org.apache.catalina.valves.RemoteAddrValve"
         allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
    -->
   </Context>

- git clone https://github.com/sunabove/210_tomcat_svr.git /opt/tomcat/svr 

- chown -R tomcat:tomcat /opt/tomcat
- chmod +x /opt/tomcat/svr/bin/*

- cp /opt/tomcat/svr/bin/tomcat9 /etc/init.d/tomcat9 
- chmod 755 /etc/init.d/tomcat9 
- cd /etc/init.d
- update-rc.d tomcat9 defaults

- get clone https://github.com/sunabove/220_template.git /opt/tomcat/template

- #tomcat auto startup script
#!/bin/bash
#
# Author : subz
# Copyright (c) 2k15
#
# Make kill the tomcat process#
TOMCAT_HOME=/opt/tomcat/svr
SHUTDOWN_WAIT=5

tomcat_pid() {
  echo `ps aux | grep org.apache.catalina.startup.Bootstrap | grep -v grep | awk '{ print $2 }'`
}

start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ] 
  then
    echo "Tomcat is already running (pid: $pid)"
  else
    # Start tomcat
    echo "Starting tomcat"
    /bin/sh $TOMCAT_HOME/bin/startup.sh
  fi


  return 0
}

stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]
  then
    echo "Stoping Tomcat"
    /bin/sh $TOMCAT_HOME/bin/shutdown.sh

    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\nwaiting for processes to exit";
      sleep 1
      let count=$count+1;
    done

    if [ $count -gt $kwait ]; then
      echo -n -e "\nkilling processes which didn't stop after $SHUTDOWN_WAIT seconds"
      kill -9 $pid
      echo  " \nprocess killed manually"
    fi
  else
    echo "Tomcat is not running"
  fi

  return 0
}
pid=$(tomcat_pid)

 if [ -n "$pid" ]
  then
    echo "Tomcat is running with pid: $pid"
    stop
  else
    echo "Tomcat is not running"
    start
  fi
exit 0
